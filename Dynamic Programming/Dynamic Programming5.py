import sys
input = sys.stdin.readline

n, m = map(int, input().rstrip().split())
k = [10001] * (m+1) # 0 ~ m값 범위에 있는 각 값을 만드는데 필요한 동전의 최소 개수를 저장할 배열 
                    # 인덱스 값 10001 => 입력되는 최댓 값이 10000인데, 1원 화폐를 사용하여 10000번 뺄 수 있으므로(소수인경우)
                    # 가능한 모든 경우의 수의 이상으로 인덱스 값 설정해 줌
money = []

for i in range(n):
    money.append(int(input()))  # 사용 할 화폐
    
k[0] = 0  # 추가적인 화폐를 하나도 사용 않고 만들 수 있으므로 인덱스 0은 0값으로 설정한다.
          # 2원 값을 만들기 위해서는 i-k, 즉 2-2 = 0 값이 만들어지는데 필요한 화폐 개수를 알아야 함
          # 이는 0개이고 k 화폐를 이용하여 해당 값을 만드므로 + 1을 해줌. 이와 같은 식을 구현하기 위하여 인덱스 0 값 설정
for i in money:
    for j in range(i, m+1):
        if k[j - i] != 10001:
            k[j] = min(k[j], k[j-i] + 1) # 현재 j의 값을 만들기 위해 저장된 최소 화폐 개수와
                                         # 현재 i화폐를 사용하여 만들 수 있는 최소 화폐 개수 비교
                                         # k[j-i] 의 뜻은 j값에서 현재 화폐를 추가하기 전, j-i 값을 만드는데 필요한 최소 개수를 뜻함
                                         # 따라서 그 값에 현재 화폐 1장을 더하면 j의 값을 이루는 또하나의 구성이 만들어지니, 이 둘을 비교함

if k[m] == 10001:
    print(-1)
else:
    print(k[m])
